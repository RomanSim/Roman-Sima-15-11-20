{"version":3,"sources":["component/sidebar/SidebarData.js","component/sidebar/Sidebar.js","component/container/Received.js","component/container/Sent.js","component/reducers/mailBox/mailBox-types.js","component/container/Compose.js","component/reducers/mailBox/mailBox-actions.js","component/container/Home.js","App.js","reportWebVitals.js","component/reducers/mailBox/mailBox-reducers.js","component/reducers/index.js","index.js"],"names":["SidebarData","title","icon","link","Sidebar","className","map","val","key","id","window","location","pathname","to","connect","state","messages","receivedMessages","onClick","e","preventDefault","fetch","method","headers","body","then","response","console","log","json","catch","error","message","from","data","sentMessages","index","subject","ADD_MESSAGE_RECEIVED","REMOVE_MESSAGE_RECEIVED","ADD_MESSAGE_SENT","USERS","dispatch","sentMessage","formData","type","types","payload","useState","updateFormData","handleChange","target","name","value","trim","Form","style","textAlign","width","marginLeft","marginRight","Group","controlId","Label","Control","onChange","placeholder","rows","Button","JSON","stringify","Home","userID","updateUserID","user","text","alert","App","path","exact","component","Compose","Received","Sent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","users","messageReducer","action","actionTypes","allReducers","combineReducers","receivedReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.744832ad.chunk.js","sourcesContent":["import React from 'react'\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: \"home\",\r\n        icon: <HomeIcon />,\r\n        link: \"/\"\r\n    },\r\n    {\r\n        title: \"Compose\",\r\n        icon: <SendIcon />,\r\n        link: \"/compose\",\r\n    },\r\n    {\r\n        title: \"Received\",\r\n        icon: <EmailIcon />,\r\n        link: \"/received\",\r\n    },\r\n    {\r\n        title: \"Sent\",\r\n        icon: <EmailIcon />,\r\n        link: \"/sent\",\r\n    }\r\n];\r\n\r\n","import React from 'react'\r\nimport './../sidebar/Sidebar.css'\r\nimport { SidebarData } from './SidebarData'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Sidebar() {\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <ul className=\"sidebarList\">\r\n                {SidebarData.map((val, key) => {\r\n                    return (\r\n                        <li key={key} className=\"row\"\r\n                            id={window.location.pathname == val.link ? \"active\" : \"\"}>\r\n                            <Link className=\"link\" to={val.link}>\r\n                                <div id=\"icon\">\r\n                                    {val.icon}\r\n                                </div>\r\n                                <div id=\"title\">\r\n                                    {val.title}\r\n                                </div>\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react'\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from \"react-redux\";\r\nimport './../container/Received.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Received = ({ messages }) => {\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const header = {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n\r\n        fetch('http://localhost:5000/messages', {\r\n            method: \"POST\",\r\n            // mode: \"no-cors\",\r\n            headers: header,\r\n            body: \"1\"\r\n        }).then(function (response) {\r\n            console.log(response.json())\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <div className=\"wrapper\">\r\n                <button onClick={handleSubmit}>Show Messages</button>\r\n                <ul className=\"messageList\">\r\n                    {messages.map((message, key) => {\r\n                        return (\r\n                            <li key={message.id} className=\"row\">\r\n                                <div id=\"from\">\r\n                                    {message.from}\r\n                                </div>\r\n                                <div id=\"data\">\r\n                                    {message.data}\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        messages: state.messages.receivedMessages\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Received);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './Received.css'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction Sent({ sentMessages }) {\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <div className=\"wrapper\">\r\n                <ul className=\"messageList\">\r\n                    {sentMessages.map((message, index) => {\r\n                        return (\r\n                            <li key={index} className=\"row\">\r\n                                <div id=\"from\">\r\n                                    {message[\"message\"].subject}\r\n                                </div>\r\n                                <div id=\"data\">\r\n                                    {message[\"message\"].message}\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(state.messages.sentMessages)\r\n    return {\r\n        sentMessages: state.messages.sentMessages\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sent);\r\n\r\n","export const ADD_MESSAGE_RECEIVED = 'ADD_MESSAGE_RECEIVED';\r\nexport const REMOVE_MESSAGE_RECEIVED = 'REMOVE_MESSAGE_RECEIVED';\r\nexport const ADD_MESSAGE_SENT = 'ADD_MESSAGE_SENT';\r\nexport const USERS = 'USERS';\r\n","import { Label } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport './Received.css';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sentMessage } from '../reducers/mailBox/mailBox-actions'\r\n\r\n\r\n\r\n\r\n\r\nconst Compose = ({ sentMessage }) => {\r\n\r\n    // const initialFormData = ({\r\n    //     subject: \"\",\r\n    //     message: \"\",\r\n    //     from: \"\",\r\n    //     to: \"\"\r\n    // });\r\n\r\n    const [formData, updateFormData] = useState({ subject: \"\", message: \"\", from: \"\", to: \"\" });\r\n\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n\r\n            // Trimming any whitespace\r\n\r\n            [e.target.name]: e.target.value.trim()\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let data = {\r\n            from: formData[\"from\"],\r\n            to: formData[\"to\"],\r\n            message: formData[\"message\"],\r\n            subject: formData[\"subject\"]\r\n        }\r\n\r\n        const header = {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n\r\n        // ... submit to API or something\r\n        fetch('http://localhost:5000/write', {\r\n            method: \"POST\",\r\n            // mode: \"no-cors\",\r\n            headers: header,\r\n            body: JSON.stringify(data)\r\n\r\n        }).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    };\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <div className=\"wrapper2\">\r\n                <Form style={{ textAlign: \"center\", width: \"300px\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Subject</Form.Label><br />\r\n                        <Form.Control name=\"subject\" onChange={handleChange} placeholder=\"subject\" /><br />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Message</Form.Label><br />\r\n                        <Form.Control name=\"message\" onChange={handleChange} rows={3} placeholder=\"Write a message\" /><br />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>From</Form.Label><br />\r\n                        <Form.Control name=\"from\" onChange={handleChange} placeholder=\"From\" /><br />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>To</Form.Label><br />\r\n                        <Form.Control name=\"to\" onChange={handleChange} placeholder=\"To\" /><br />\r\n                    </Form.Group>\r\n                    {/* <Button onClick={() => sentMessage(formData)}>Send</Button> */}\r\n                    <Button onClick={handleSubmit}>Send</Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         messages: state.messages.sentMessages\r\n//     };\r\n// }\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sentMessage: (formData) => dispatch(sentMessage(formData))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Compose);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n/*\r\n* action creators\r\n*/\r\nimport * as types from './mailBox-types'\r\n\r\nexport const receiveMessage = (messages) => {\r\n    return {\r\n        type: types.ADD_MESSAGE_RECEIVED,\r\n        payload: {\r\n            message: messages,\r\n        },\r\n    };\r\n};\r\n\r\nexport const sentMessage = (messages) => {\r\n    return {\r\n        type: types.ADD_MESSAGE_SENT,\r\n        payload: {\r\n            message: messages,\r\n        },\r\n    };\r\n};\r\n\r\nexport const removeMessageReceived = (messages) => {\r\n    return {\r\n        type: types.REMOVE_MESSAGE_RECEIVED,\r\n        payload: {\r\n            message: messages,\r\n        },\r\n    };\r\n};\r\n\r\nexport const user = (messages) => {\r\n    return {\r\n        type: types.USERS,\r\n        payload: {\r\n            id: messages.userID,\r\n        },\r\n    };\r\n};\r\n","import React, { useState } from 'react'\r\nimport './Home.css';\r\n\r\n\r\nconst Home = () => {\r\n    const [userID, updateUserID] = useState({ \"userID\": 0 });\r\n\r\n    const handleChange = e => {\r\n        updateUserID({\r\n            ...userID,\r\n\r\n            [e.target.name]: e.target.value.trim()\r\n\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let user = userID;\r\n\r\n        const header = {\r\n            \"Content-Type\": \"application/json\",\r\n        }\r\n\r\n        fetch('http://localhost:5000/messages', {\r\n            method: \"POST\",\r\n            // mode: \"no-cors\",\r\n            headers: header,\r\n            body: JSON.stringify(user)\r\n\r\n        }).then(function (response) {\r\n            return response.json();\r\n        }).then(function (text) {\r\n            alert(text)\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <div className=\"wrapper\">\r\n                <h1>Messaging App</h1>\r\n                <form>\r\n                    <input onChange={handleChange} name=\"userID\" placeholder=\"Enter user ID\"></input>\r\n                    <button onClick={handleSubmit}>Login</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Sidebar from './component/sidebar/Sidebar';\nimport Received from './component/container/Received';\nimport Sent from './component/container/Sent';\nimport Compose from './component/container/Compose';\nimport Home from './component/container/Home';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Sidebar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/compose' component={Compose} />\n          <Route path='/received' component={Received} />\n          <Route path='/sent' component={Sent} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from './mailBox-types';\r\n\r\nconst INITIAL_STATE = {\r\n    receivedMessages: [], //user id, title, description\r\n    sentMessages: [], // user id, title, description\r\n    users: [] //user id, maybe name\r\n};\r\n\r\nconst messageReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_MESSAGE_RECEIVED:\r\n            return {}\r\n        case actionTypes.ADD_MESSAGE_SENT:\r\n            return { ...state, sentMessages: [...state.sentMessages, action.payload] }\r\n        case actionTypes.REMOVE_MESSAGE_RECEIVED:\r\n            return {}\r\n        case actionTypes.USERS:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messageReducer;","import { combineReducers } from 'redux';\r\n// import receivedReducer from './MailboxData';\r\nimport receivedReducer from './mailBox/mailBox-reducers';\r\n\r\n// const allReducers = combineReducers({\r\n//     messages: receivedReducer\r\n// });\r\n\r\n// export default allReducers;\r\nconst allReducers = combineReducers({\r\n    messages: receivedReducer\r\n});\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport allReducers from './component/reducers/index';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(allReducers, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n{/* <React.StrictMode>\n    <App />\n  </React.StrictMode>, */}"],"sourceRoot":""}